<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.InheritParentStrategy"/>
    </hudson.security.AuthorizationMatrixProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>5</daysToKeep>
        <numToKeep>2</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.scm.listtagsparameter.ListSubversionTagsParameterDefinition plugin="subversion@2.12.1">
          <name>Tag</name>
          <description>Select a Subversion entry</description>
          <tagsDir>https://svn.detran.goias.intra/svn/java/Escritório Processos Detran/Gestão de TI/syncr/Tags</tagsDir>
          <credentialsId>9838a34a-d7c8-4401-b4eb-f391afc45ad6</credentialsId>
          <tagsFilter></tagsFilter>
          <reverseByDate>true</reverseByDate>
          <reverseByName>false</reverseByName>
          <defaultValue></defaultValue>
          <maxTags></maxTags>
        </hudson.scm.listtagsparameter.ListSubversionTagsParameterDefinition>
        <com.datalex.jdkparameter.JavaParameterDefinition plugin="JDK_Parameter_Plugin@1.0">
          <name>JAVA</name>
          <description></description>
          <defaultJDK>JDK7</defaultJDK>
          <allowedJDKs>
            <string>JDK7</string>
            <string>JDK8</string>
          </allowedJDKs>
        </com.datalex.jdkparameter.JavaParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Tipo</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Normal</string>
              <string>Fora do Prazo</string>
              <string>Emergencial</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Issue</name>
          <description>Informe os números(separados por vírgula) das tarefas relacionadas ao Deploy.</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57">
    <script>#!/usr/bin/env groovy
class Constants {
   // Somente esses logins podem aprovar a atividade do redmine e efetuar o deploy
   static final LOGIN_APPROVERS = &apos;tecnisys,joao-lc,gustavo-jm,victor-fa,leandro-fsi&apos;;
}
    //Classe para pegar o último usuário autorizador de um INPUT Step do Jenkins - By Felipe
    def getLatestApprover() {
    def latest = null

    // this returns a CopyOnWriteArrayList, safe for iteration
    def acts = currentBuild.rawBuild.getAllActions()
    for (act in acts) {
    if (act instanceof org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction) {
    latest = act.userId
                      }
                      }
    return latest
                            }
node{
    def tag_custom=&quot;&quot;
      stage(&apos;Congela Tag&apos;){
        script{
            def verifica_tag=&quot;&quot;
            verifica_tag = sh(returnStdout: true, script: &quot;svn list https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/syncr/Tags | grep ${Tag} | cut -d &apos;-&apos; -f2&quot;).trim()
            if(verifica_tag == &apos;prod/&apos;){
                currentBuild.result = &apos;SUCCESS&apos;
                tag_custom = sh(returnStdout: true, script: &quot;echo ${Tag}&quot;).trim()
            }

            else{
                sh(returnStdout: true, script:&quot;svn rename https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/syncr/Tags/${Tag} https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/syncr/Tags/${Tag}-prod -m &apos;Tag renomeada automaticamente pelo Jenkins&apos;&quot;)
                tag_custom = sh(returnStdout: true, script: &quot;echo ${Tag}-prod&quot;).trim()
                }
            }
        }
        def usuarioinfo
                script{
                    wrap([$class: &apos;BuildUser&apos;]){
                        usuarioinfo= sh (script: &quot;echo ${BUILD_USER_ID}&quot;, returnStdout:true).trim()
                    }
    stage(&apos;SCM&apos;){
        checkout([
            $class: &apos;SubversionSCM&apos;, 
            additionalCredentials: [],
            excludedCommitMessages: &apos;&apos;, 
            excludedRegions: &apos;&apos;, 
            excludedRevprop: &apos;&apos;, 
            excludedUsers: &apos;&apos;, 
            filterChangelog: false, 
            ignoreDirPropChanges: false, 
            includedRegions: &apos;&apos;, 
            locations: [
                [
                    cancelProcessOnExternalsFail: true, 
                    credentialsId: &apos;9838a34a-d7c8-4401-b4eb-f391afc45ad6&apos;, 
                    depthOption: &apos;infinity&apos;, 
                    ignoreExternalsOption: true, 
                    local: &apos;.&apos;, 
                    remote: &quot;https://svn.detran.goias.intra/svn/java/Escritório Processos Detran/Gestão de TI/syncr/Tags/${tag_custom}/4%20-%20Implementa%C3%A7%C3%A3o/syncr&quot;
                ]
            ], 
            quietOperation: false,
            workspaceUpdater: [$class: &apos;CheckoutUpdater&apos;]
        ])
    }
                }
    stage(&apos;QA&apos;) {
        stage(&apos;QA-Compile&apos;) {
            withMaven(maven: &apos;maven-3&apos;){
                sh &apos;mvn -X -Duser.home=/opt/.jenkins clean package -Pprod -U&apos;
            }
        }
        stage(&apos;QA-Analisys&apos;) {
            withSonarQubeEnv(&apos;sonar-6&apos;){
                withMaven(maven: &apos;maven-3&apos;){
                    sh &apos;mvn -X -Duser.home=/opt/.jenkins -Pprod sonar:sonar&apos;
                }
            }
        }
        stage(&apos;QA-Quality Gate&apos;){
            timeout (time: 2, unit: &apos;MINUTES&apos;) {
                def qg = waitForQualityGate()          
                if (qg.status != &apos;OK&apos;) {
                    error &quot;Pipeline aborted due to quality gate failure: ${qg.status}&quot;
                }
            }
        }
    }
        stage(&apos;Build&apos;){
        withMaven(maven: &apos;maven-3&apos;){
            sh &apos;mvn -X -Duser.home=/opt/.jenkins -Pprod package&apos;
        }
    }
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>