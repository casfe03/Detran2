<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.25">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@2.1">
          <name>Projeto</name>
          <description></description>
          <randomName>choice-parameter-2617953819509917</randomName>
          <visibleItemCount>100</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.51">
              <script>def projetos = (&quot;svn list https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/ --trust-server-cert --username jenkins --password J3nkinsIC --non-interactive&quot;).execute()
return projetos.text.readLines()</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.51">
              <script>return[&apos;Não existem projetos&apos;]</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>CRIAR-TAG</projectName>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>true</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.ChoiceParameter>
        <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@2.1">
          <name>Tipo</name>
          <description></description>
          <randomName>choice-parameter-2623168372860845</randomName>
          <visibleItemCount>2</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.51">
              <script>return[&apos;Trunk&apos;,&apos;Branches&apos;]</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.51">
              <script>return[&apos;Error&apos;]</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>CRIAR-TAG</projectName>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>false</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.ChoiceParameter>
        <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@2.1">
          <name>Branch</name>
          <description></description>
          <randomName>choice-parameter-2623168391863735</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.51">
              <script>if(Tipo.equals(&apos;Branches&apos;)){
retorno = (&quot;svn list https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/&quot;+Projeto+Tipo+&quot; --trust-server-cert  --username jenkins --password J3nkinsIC --non-interactive&quot;).execute()
return retorno.text.readLines()
}else{
return[&apos;Trunk&apos;]
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.51">
              <script>return[&apos;Error&apos;]</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>CRIAR-TAG</projectName>
          <parameters class="linked-hash-map">
            <entry>
              <string>Projeto</string>
              <string>sah/</string>
            </entry>
            <entry>
              <string>Tipo</string>
              <string>Trunk</string>
            </entry>
          </parameters>
          <referencedParameters>Projeto,Tipo</referencedParameters>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>false</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.CascadeChoiceParameter>
        <org.biouno.unochoice.CascadeChoiceParameter plugin="uno-choice@2.1">
          <name>Caminho</name>
          <description></description>
          <randomName>choice-parameter-2880130214716870</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.51">
              <script>if(Tipo.equals(&apos;Trunk&apos;)){
return[&quot;https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/&quot;+Projeto+&quot;Trunk/&quot;]
}else{
return[&quot;https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/&quot;+Projeto+&quot;Branches/&quot;+Branch]
}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.51">
              <script>return[&apos;Sem Pasta para o SVN&apos;]</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>CRIAR-TAG</projectName>
          <parameters class="linked-hash-map">
            <entry>
              <string>Projeto</string>
              <string>sah/</string>
            </entry>
            <entry>
              <string>Tipo</string>
              <string>Trunk</string>
            </entry>
            <entry>
              <string>Branch</string>
              <string>Trunk</string>
            </entry>
          </parameters>
          <referencedParameters>Projeto,Tipo,Branch</referencedParameters>
          <choiceType>PT_SINGLE_SELECT</choiceType>
          <filterable>false</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.CascadeChoiceParameter>
        <hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition plugin="validating-string-parameter@2.4">
          <name>Tag</name>
          <description></description>
          <defaultValue>INSIRA O VALOR DE TRÊS DIGITOS DA TAG CONFORME O EXEMPLO: 0.0.0</defaultValue>
          <regex>[0-9]{1,9}.[0-9]{1,9}.[0-9]{1,9}</regex>
          <failedValidationMessage>O valor inserido não é numérico, favor inserir um valor numérico de três digitos!</failedValidationMessage>
        </hudson.plugins.validating__string__parameter.ValidatingStringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>descricao</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.InheritParentStrategy"/>
      <permission>hudson.model.Item.Build:alan-bs</permission>
      <permission>hudson.model.Item.Build:andre-lrl</permission>
      <permission>hudson.model.Item.Build:andre-zg</permission>
      <permission>hudson.model.Item.Build:arthur-or</permission>
      <permission>hudson.model.Item.Build:carlos-es</permission>
      <permission>hudson.model.Item.Build:daniel-gf</permission>
      <permission>hudson.model.Item.Build:edu-rb</permission>
      <permission>hudson.model.Item.Build:erik-qo</permission>
      <permission>hudson.model.Item.Build:fabricio-mc</permission>
      <permission>hudson.model.Item.Build:felipe-osb</permission>
      <permission>hudson.model.Item.Build:flavio-ss</permission>
      <permission>hudson.model.Item.Build:giliard-ss</permission>
      <permission>hudson.model.Item.Build:gilson-ml</permission>
      <permission>hudson.model.Item.Build:gleidimar-ld</permission>
      <permission>hudson.model.Item.Build:itamar-vr</permission>
      <permission>hudson.model.Item.Build:klayton-sv</permission>
      <permission>hudson.model.Item.Build:leandro-vo</permission>
      <permission>hudson.model.Item.Build:lucas-ol</permission>
      <permission>hudson.model.Item.Build:luiz-fb</permission>
      <permission>hudson.model.Item.Build:marcelo-hc</permission>
      <permission>hudson.model.Item.Build:matheus-or</permission>
      <permission>hudson.model.Item.Build:mirelle-cl</permission>
      <permission>hudson.model.Item.Build:narcieliton-ae</permission>
      <permission>hudson.model.Item.Build:nubia-cp</permission>
      <permission>hudson.model.Item.Build:nubia-tsb</permission>
      <permission>hudson.model.Item.Build:osvaldo-gp</permission>
      <permission>hudson.model.Item.Build:pablo-hr</permission>
      <permission>hudson.model.Item.Build:pedro-cs</permission>
      <permission>hudson.model.Item.Build:rafael-fd</permission>
      <permission>hudson.model.Item.Build:raquel-cc</permission>
      <permission>hudson.model.Item.Build:rhuan-sr</permission>
      <permission>hudson.model.Item.Build:rodrigo-sr</permission>
      <permission>hudson.model.Item.Build:romario-ss</permission>
      <permission>hudson.model.Item.Build:uaslei-fd</permission>
      <permission>hudson.model.Item.Build:walber-mr</permission>
      <permission>hudson.model.Item.Build:waltenes-ps</permission>
      <permission>hudson.model.Item.Build:wanderson-cs</permission>
      <permission>hudson.model.Item.Read:alan-bs</permission>
      <permission>hudson.model.Item.Read:andre-lrl</permission>
      <permission>hudson.model.Item.Read:andre-zg</permission>
      <permission>hudson.model.Item.Read:arthur-or</permission>
      <permission>hudson.model.Item.Read:carlos-es</permission>
      <permission>hudson.model.Item.Read:daniel-gf</permission>
      <permission>hudson.model.Item.Read:edu-rb</permission>
      <permission>hudson.model.Item.Read:erik-qo</permission>
      <permission>hudson.model.Item.Read:fabricio-mc</permission>
      <permission>hudson.model.Item.Read:felipe-osb</permission>
      <permission>hudson.model.Item.Read:flavio-ss</permission>
      <permission>hudson.model.Item.Read:giliard-ss</permission>
      <permission>hudson.model.Item.Read:gilson-ml</permission>
      <permission>hudson.model.Item.Read:gleidimar-ld</permission>
      <permission>hudson.model.Item.Read:itamar-vr</permission>
      <permission>hudson.model.Item.Read:klayton-sv</permission>
      <permission>hudson.model.Item.Read:leandro-vo</permission>
      <permission>hudson.model.Item.Read:lucas-ol</permission>
      <permission>hudson.model.Item.Read:luiz-fb</permission>
      <permission>hudson.model.Item.Read:marcelo-hc</permission>
      <permission>hudson.model.Item.Read:matheus-or</permission>
      <permission>hudson.model.Item.Read:mirelle-cl</permission>
      <permission>hudson.model.Item.Read:narcieliton-ae</permission>
      <permission>hudson.model.Item.Read:nubia-cp</permission>
      <permission>hudson.model.Item.Read:nubia-tsb</permission>
      <permission>hudson.model.Item.Read:osvaldo-gp</permission>
      <permission>hudson.model.Item.Read:pablo-hr</permission>
      <permission>hudson.model.Item.Read:pedro-cs</permission>
      <permission>hudson.model.Item.Read:rafael-fd</permission>
      <permission>hudson.model.Item.Read:raquel-cc</permission>
      <permission>hudson.model.Item.Read:rhuan-sr</permission>
      <permission>hudson.model.Item.Read:rodrigo-sr</permission>
      <permission>hudson.model.Item.Read:romario-ss</permission>
      <permission>hudson.model.Item.Read:uaslei-fd</permission>
      <permission>hudson.model.Item.Read:walber-mr</permission>
      <permission>hudson.model.Item.Read:waltenes-ps</permission>
      <permission>hudson.model.Item.Read:wanderson-cs</permission>
    </hudson.security.AuthorizationMatrixProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.57">
    <script>def id_issue
def usuario
def submitter
pipeline {
    agent any
    stages{
        stage(&apos;Criação de ISSUE no Redmine&apos;){
            steps{
                script{
                    wrap([$class: &apos;BuildUser&apos;]){
                        usuario = sh (script: &quot;echo ${BUILD_USER_ID}&quot;, returnStdout:true).trim()
                    }
                
                    id_issue = sh (returnStdout: true, script: &quot;curl -X POST  http://redmine.detran.goias.intra/issues.xml -H &apos;cache-control: no-cache&apos; -H &apos;content-type: application/xml&apos; -H &apos;x-redmine-api-key: eeb94e0a5d4faa1e06aa40d6c172e38291761663&apos; -d &apos;&lt;issue&gt;&lt;project_id&gt;134&lt;/project_id&gt;&lt;tracker_id&gt;127&lt;/tracker_id&gt;&lt;status_id&gt;1&lt;/status_id&gt;&lt;subject&gt;Criação da tag: ${Tag} para o projeto ${Projeto} a partir da Branch ${Branch}&lt;/subject&gt;&lt;description&gt;Acesse a URL ${Caminho} para verificar a TAG \n ${descricao}&lt;/description&gt;&lt;/issue&gt;&apos; | grep -oPm1 \&quot;(?&lt;=&lt;id&gt;)[^.*&lt;]+\&quot; | tr -d &apos;\n&apos;&quot;)
                    sh (returnStdout: true, script: &quot;curl -X PUT  http://redmine.detran.goias.intra/issues/${id_issue}.json -H &apos;cache-control: no-cache&apos; -H &apos;content-type: application/json&apos; -H &apos;x-redmine-api-key: eeb94e0a5d4faa1e06aa40d6c172e38291761663&apos; -d &apos;{\&quot;issue\&quot;: {\&quot;notes\&quot;: \&quot;O usuário ${usuario} solicitou criação da Tag ${Tag} para o projeto ${Projeto} a partir da Branch ${Branch}\&quot;}}&apos;&quot;)
                }
            }
        }
        
        stage(&apos;Verificando a TAG no SVN&apos;){
            steps{
                script{
                    def id_user_redmine = &quot;&quot;
                    id_user_redmine = sh returnStdout: true, script: &quot;cat /var/lib/jenkins/redmine/users.xml |grep ${usuario} |cut -d\$&apos;\t&apos; -f1&quot;

                    def verifica_tag=&quot;&quot;
                    verifica_tag = sh(returnStdout: true, script: &quot;svn list https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/${Projeto}Tags | grep ${Tag} | cut -d &apos;-&apos; -f2&quot;).trim()
                    if(verifica_tag == &quot;prod/&quot;){
                        // Se a tag solicitada já existe com o prefixo prod no svn negar a criação.
                        // Atualiza o Redmine e atribui para o usuário
                        sh returnStdout: true, script: &quot;curl -X PUT http://redmine.detran.goias.intra/issues/${id_issue}.json -H &apos;cache-control: no-cache&apos; -H &apos;content-type: application/json&apos; -H &apos;x-redmine-api-key: eeb94e0a5d4faa1e06aa40d6c172e38291761663&apos; -d &apos;{\&quot;issue\&quot;: {\&quot;status_id\&quot;: 6,\&quot;assigned_to_id\&quot;:${id_user_redmine}, \&quot;notes\&quot;: \&quot;O usuário jenkins rejeitou a criação da Tag ${Tag} para o projeto ${Projeto}, pois esta TAG já foi executada em ambiente de produção.\&quot;}}&apos;&quot;
                        sh returnStdout: true, script: &quot;curl -X PUT http://redmine.detran.goias.intra/issues/${id_issue}.json -H &apos;cache-control: no-cache&apos; -H &apos;content-type: application/json&apos; -H &apos;x-redmine-api-key: eeb94e0a5d4faa1e06aa40d6c172e38291761663&apos; -d &apos;{\&quot;issue\&quot;: {\&quot;status_id\&quot;: 3}}&apos;&quot;
                        currentBuild.result = &apos;ABORT&apos;
                        error &quot;Pipeline abortada essa TAG já foi executada em ambiente de producao&quot;
                        }
            } 
        }
        }    
        stage(&apos;Delete e Recriaçao de TAG&apos;){
            steps{
                script{
                    withCredentials([[$class: &apos;UsernamePasswordMultiBinding&apos;, credentialsId: &apos;9838a34a-d7c8-4401-b4eb-f391afc45ad6&apos;,
                    usernameVariable: &apos;USERNAME&apos;, passwordVariable: &apos;PASSWORD&apos;]]) {
                    def verifica_tag_again=&quot;&quot;
                    verifica_tag_again = sh(returnStdout: true, script: &quot;svn list https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/${Projeto}Tags | grep ${Tag} | cut -d &apos;-&apos; -f2&quot;).trim()
                    if(verifica_tag_again == &quot;${Tag}/&quot;){
                       sh returnStdout: true, script: &quot;svn delete https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/${Projeto}/Tags/${Tag} --username ${USERNAME} --password ${PASSWORD} --trust-server-cert --non-interactive -m \&quot;Deletando a tag ${Tag} do projeto ${Projeto}.\&quot;&quot;}
                       sh returnStdout: true, script: &quot;svn copy ${Caminho} https://svn.detran.goias.intra/svn/java/Escrit%C3%B3rio%20Processos%20Detran/Gest%C3%A3o%20de%20TI/${Projeto}/Tags/${Tag} --username ${USERNAME} --password ${PASSWORD} --trust-server-cert --non-interactive -m \&quot;Criando a tag ${Tag} do projeto ${Projeto}.\&quot;&quot;
                }
                }
            } 
        } 
     stage(&apos;Build Homolog&apos;){
        steps {
                script{
                    def name_pipeline=&quot;&quot;
                    name_pipeline = sh(returnStdout: true, script:&quot;echo ${Projeto} | tr -d &apos;/&apos;| tr [a-z] [A-Z]&quot;).trim()
                    name_pipeline = sh(returnStdout: true, script:&quot;echo ${name_pipeline}-HOM&quot;).trim()
                    sh(returnStdout: true, script:&quot;echo &apos;Nome do Pipeline ${name_pipeline}&apos;&quot;)
                    build job: &quot;${name_pipeline}&quot;, parameters: [
                        string(name: &apos;Tag&apos;, value: &quot;${Tag}&quot;)
                    ]
                }
            }
     }
        
        stage(&apos;Resolvendo ISSUE&apos;){
            steps{
                script{
                    def id_user_redmine = sh returnStdout: true, script: &quot;cat /var/lib/jenkins/redmine/users.xml |grep ${usuario} |cut -d\$&apos;\t&apos; -f1&quot;
                        sh returnStdout: true, script: &quot;curl -X PUT http://redmine.detran.goias.intra/issues/${id_issue}.json -H &apos;cache-control: no-cache&apos; -H &apos;content-type: application/json&apos; -H &apos;x-redmine-api-key: eeb94e0a5d4faa1e06aa40d6c172e38291761663&apos; -d &apos;{\&quot;issue\&quot;: {\&quot;status_id\&quot;: 3,\&quot;assigned_to_id\&quot;:${id_user_redmine}, \&quot;notes\&quot;: \&quot;O usuário ${usuario} solicitou criação da Tag ${Tag} para o projeto ${Projeto} a partir da Branch ${Branch}\&quot;}}&apos;&quot;    
                    }
                }                
            }
        }

    }</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>